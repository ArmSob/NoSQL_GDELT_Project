{"paragraphs":[{"text":"%md\n# Projet GDELT\n## Chargement des données brutes sur S3","user":"anonymous","dateUpdated":"2021-01-14T09:51:17+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610617626015_85370031","id":"20200112-094551_1494650104","dateCreated":"2021-01-14T09:47:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1617","dateFinished":"2021-01-14T09:51:17+0000","dateStarted":"2021-01-14T09:51:17+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Projet GDELT</h1>\n<h2>Chargement des données brutes sur S3</h2>\n</div>"}]}},{"text":"import sys.process._\nimport java.net.{URL, HttpURLConnection}\nimport java.nio.file.{Files,StandardCopyOption}\nimport java.io.File\n\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.SQLContext\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\nimport com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicAWSCredentials\nimport com.amazonaws.auth.BasicSessionCredentials","user":"anonymous","dateUpdated":"2021-01-14T09:50:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610617716430_-494890766","id":"20210114-094836_500661568","dateCreated":"2021-01-14T09:48:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2263","dateFinished":"2021-01-14T09:50:51+0000","dateStarted":"2021-01-14T09:50:04+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import sys.process._\nimport java.net.{URL, HttpURLConnection}\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.io.File\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.SQLContext\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\nimport com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicAWSCredentials\nimport com.amazonaws.auth.BasicSessionCredentials\n"}]}},{"text":"%md\n#### Etape 1 : extraction des données et stockage dans un bucket S3\nPour cela, on télécharge dans un premier temps un fichier CSV *masterfilelist.txt* qui  contient la liste des fichiers du jeu de données GDELT ainsi que l'URL pour télécharger chaque fichier. Chaque fichier de données est accessible par HTTP. La fonction *fileDownloader* permet de télécharger un fichier. \nCe fichier est ensuite convertit en Data Frame, filtré sur la journée qui nous intéresse, puis grâce aux URL, on récupère les données GDELT et on les convertit en Data Frame également :\n\n- les events \n- le graphe des relations \n","user":"anonymous","dateUpdated":"2021-01-14T09:47:06+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610617626022_623221508","id":"20200112-094616_141408279","dateCreated":"2021-01-14T09:47:06+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1619"},{"text":"// Configuration de l'accès au bucket S3\n    \nval AWS_ID = \"ASIAZLK42DVGZUT5SQ55\"\nval AWS_KEY = \"MAVQGLFPfRNK3pIhNQyf10xFrsdXauILDaKJZGFj\"\nval AWS_SESSION_TOKEN = \"FwoGZXIvYXdzEDMaDL7FK+ZaS3xUJmaDMCLTAfNEjrr8BNwEL5f3ymK6ZxYmZXADyKF1yxr5Bayy5x2JE3umofgNma98mg7bTTg7faV7ul2gmWDRk7Aw1JmHYiYGXD98IF+NpiQNatmEMBadyBj/LZeQwf0bThrN/SQQpqeeOwy4snOpQbxQ9RnyaK24s7JLyiZJNFeNGx1ocL87PzIbOy3zneWq9yOqAdCr4lbMLue03bE3cVOV5w7jiIDFA1eoaAOUL7mm07BZWpeNRLyiP3h8m9t0gRmpOOas7VgP+GdsEg0KxYpllBWIhR/jUnso3aeAgAYyLagkAZkuXtsS+aeP/v8em75Mu8HHu0asbkweBeaG/lCSFzSWTyuA+Qc1PQyRuQ==\"\n// la classe AmazonS3Client n'est pas serializable\n// on rajoute l'annotation @transient pour dire a Spark de ne pas essayer de serialiser cette classe et l'envoyer aux executeurs\n@transient val awsClient = new AmazonS3Client(new BasicSessionCredentials(AWS_ID, AWS_KEY, AWS_SESSION_TOKEN))\n\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\", AWS_ID)\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\", AWS_KEY)\nsc.hadoopConfiguration.set(\"fs.s3a.secret.token\", AWS_SESSION_TOKEN)","user":"anonymous","dateUpdated":"2021-01-14T09:59:35+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610617626022_-367439640","id":"20200112-102836_1663931357","dateCreated":"2021-01-14T09:47:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1620","dateFinished":"2021-01-14T09:59:38+0000","dateStarted":"2021-01-14T09:59:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\nAWS_ID: String = ASIAZLK42DVGZUT5SQ55\nAWS_KEY: String = MAVQGLFPfRNK3pIhNQyf10xFrsdXauILDaKJZGFj\nAWS_SESSION_TOKEN: String = FwoGZXIvYXdzEDMaDL7FK+ZaS3xUJmaDMCLTAfNEjrr8BNwEL5f3ymK6ZxYmZXADyKF1yxr5Bayy5x2JE3umofgNma98mg7bTTg7faV7ul2gmWDRk7Aw1JmHYiYGXD98IF+NpiQNatmEMBadyBj/LZeQwf0bThrN/SQQpqeeOwy4snOpQbxQ9RnyaK24s7JLyiZJNFeNGx1ocL87PzIbOy3zneWq9yOqAdCr4lbMLue03bE3cVOV5w7jiIDFA1eoaAOUL7mm07BZWpeNRLyiP3h8m9t0gRmpOOas7VgP+GdsEg0KxYpllBWIhR/jUnso3aeAgAYyLagkAZkuXtsS+aeP/v8em75Mu8HHu0asbkweBeaG/lCSFzSWTyuA+Qc1PQyRuQ==\nawsClient: com.amazonaws.services.s3.AmazonS3Client = com.amazonaws.services.s3.AmazonS3Client@2e001341\n"}]}},{"text":"// Fonction fileDownloader\ndef fileDownloader(urlOfFileToDownload: String, fileName: String) = {\n    val url = new URL(urlOfFileToDownload)\n    val connection = url.openConnection().asInstanceOf[HttpURLConnection]\n    connection.setConnectTimeout(5000)\n    connection.setReadTimeout(5000)\n    connection.connect()\n\n    if (connection.getResponseCode >= 400)\n        println(\"error\")\n    else\n        url #> new File(fileName) !!\n    }","user":"anonymous","dateUpdated":"2021-01-14T10:00:23+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610617626024_783626400","id":"20200112-100354_934449719","dateCreated":"2021-01-14T09:47:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1621","dateFinished":"2021-01-14T10:00:23+0000","dateStarted":"2021-01-14T10:00:23+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one feature warning; re-run with -feature for details\nfileDownloader: (urlOfFileToDownload: String, fileName: String)Any\n"}]}},{"text":"// Téléchargement du fichier masterfilelist.txt et sauvegarde dans le dossier /tmp/ du bucket bucket-gdelt2019\nfileDownloader(\"http://data.gdeltproject.org/gdeltv2/masterfilelist.txt\", \"/tmp/masterfilelist.txt\")\nfileDownloader(\"http://data.gdeltproject.org/gdeltv2/masterfilelist-translation.txt\", \"/tmp/masterfilelist_translation.txt\") //same for Translation file\nawsClient.putObject(\"vincent-partimbene-telecom-gdelt2020\", \"masterfilelist.txt\", new File(\"/tmp/masterfilelist.txt\") )\nawsClient.putObject(\"vincent-partimbene-telecom-gdelt2020\", \"masterfilelist_translation.txt\", new File( \"/tmp/masterfilelist_translation.txt\") )","user":"anonymous","dateUpdated":"2021-01-14T10:02:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610617626024_-1678967031","id":"20200112-100557_1341750775","dateCreated":"2021-01-14T09:47:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1622","dateFinished":"2021-01-14T10:02:29+0000","dateStarted":"2021-01-14T10:02:20+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res4: com.amazonaws.services.s3.model.PutObjectResult = com.amazonaws.services.s3.model.PutObjectResult@61fa87e8\n"}]}},{"text":"object AwsClient{\n    val s3 = new AmazonS3Client(new BasicSessionCredentials(AWS_ID, AWS_KEY, AWS_SESSION_TOKEN))\n}","user":"anonymous","dateUpdated":"2021-01-14T10:08:06+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610617626025_-228044984","id":"20200120-110146_602857232","dateCreated":"2021-01-14T09:47:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1623","dateFinished":"2021-01-14T10:08:07+0000","dateStarted":"2021-01-14T10:08:06+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\ndefined object AwsClient\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610618921689_-214730871","id":"20210114-100841_1793490823","dateCreated":"2021-01-14T10:08:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2698","text":"// masterfile.txt > dataframe\r\nval df = sqlContext.read.\r\n    option(\"delimiter\",\" \").\r\n    option(\"infer_schema\",\"true\").\r\n    csv(\"s3://vincent-partimbene-telecom-gdelt2020//masterfilelist.txt\").\r\n    withColumnRenamed(\"_c0\",\"size\").\r\n    withColumnRenamed(\"_c1\",\"hash\").\r\n    withColumnRenamed(\"_c2\",\"url\").\r\n    filter(col(\"url\").\r\n    contains(\"/202006\")).cache\r\n    \r\ndf.select(\"url\").repartition(200).foreach( r=> {\r\n        val URL = r.getAs[String](0)\r\n        val fileName = r.getAs[String](0).split(\"/\").last\r\n        val dir = \"/tmp/\"\r\n        val localFileName = dir + fileName\r\n        fileDownloader(URL,  localFileName)\r\n        val localFile = new File(localFileName)\r\n        AwsClient.s3.putObject(\"vincent-partimbene-telecom-gdelt2020\", fileName, localFile )\r\n        localFile.delete()\r\n     })","dateUpdated":"2021-01-14T10:16:31+0000","dateFinished":"2021-01-14T10:24:34+0000","dateStarted":"2021-01-14T10:16:31+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [size: string, hash: string ... 1 more field]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-61-32.ec2.internal:4040/jobs/job?id=0","http://ip-172-31-61-32.ec2.internal:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610619927869_-1442738585","id":"20210114-102527_1072422974","dateCreated":"2021-01-14T10:25:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2906","text":"// masterfilelist_translation.txt > dataframe\r\nval df_translation = sqlContext.read.\r\n    option(\"delimiter\",\" \").\r\n    option(\"infer_schema\",\"true\").\r\n    csv(\"s3://vincent-partimbene-telecom-gdelt2020//masterfilelist_translation.txt\").\r\n    withColumnRenamed(\"_c0\",\"size\").\r\n    withColumnRenamed(\"_c1\",\"hash\").\r\n    withColumnRenamed(\"_c2\",\"url\").\r\n    filter(col(\"url\").\r\n    contains(\"/202006\")).cache\r\n    \r\ndf_translation.select(\"url\").repartition(200).foreach( r=> {\r\n        val URL = r.getAs[String](0)\r\n        val fileName = r.getAs[String](0).split(\"/\").last\r\n        val dir = \"/tmp/\"\r\n        val localFileName = dir + fileName\r\n        fileDownloader(URL,  localFileName)\r\n        val localFile = new File(localFileName)\r\n        AwsClient.s3.putObject(\"vincent-partimbene-telecom-gdelt2020\", fileName, localFile )\r\n        localFile.delete()\r\n     })","dateUpdated":"2021-01-14T10:27:32+0000","dateFinished":"2021-01-14T10:37:16+0000","dateStarted":"2021-01-14T10:27:32+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_translation: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [size: string, hash: string ... 1 more field]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-61-32.ec2.internal:4040/jobs/job?id=2","http://ip-172-31-61-32.ec2.internal:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}}}],"name":"DownloadS3","id":"2FXVFE92U","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}